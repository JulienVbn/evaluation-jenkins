apiVersion: apps/v1
kind: Deployment
metadata:
  name: cast-service-deployment
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: cast-service
  template:
    metadata:
      labels:
        app: cast-service
    spec:
      containers:
      - name: cast-service
        image: {{ .Values.cast-service-deployment.containers.image }}
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URI
          value: "postgresql://cast_db_username:cast_db_password@cast_db/cast_db_{{ .Values.namespace }}"
        volumeMounts:
        - name: cast-service-data-{{ .Values.namespace }}
          mounthPath: /app
      volumes:
      - name: cast-service-data-{{ .Values.namespace }}
        persistentVolumeClaim:
          claimName: cast-service-claim-{{ .Values.namespace }}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: cast-service-service
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: cast-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000