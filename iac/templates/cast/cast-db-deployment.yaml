apiVersion: apps/v1
kind: Deployment
metadata:
  name: cast-db-deployment
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: cast-db
  template:
    metadata:
      labels:
        app: cast-db
    spec:
      containers:
      - name: cast-db
        image: postgres:12.1-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: {{ .Values.cast.db.env.POSTGRES_USER.value }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.cast.db.env.POSTGRES_PASSWORD.value }}
        - name: POSTGRES_DB
          value: {{ .Values.cast.db.env.POSTGRES_DB.value }}
        volumeMounts:
        - name: castdbdata-pv
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: castdbdata-pv
        persistentVolumeClaim:
          claimName: castdbdata-pvc
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: cast-db-service
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: cast-db
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5432
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: castdbdata-pv
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/cast/prod/db/"
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: castdbdata-pvc
  namespace: {{ .Values.namespace }}
spec:
  volumeName: castdbdata-pv
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi